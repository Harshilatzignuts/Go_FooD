{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: [],\n  reducers: {\n    add(state, action) {\n      localStorage.setItem(\"cartItems\", JSON.stringify([...state, action.payload]));\n      return [...state, action.payload];\n    },\n    remove(state, action) {\n      console.log(\"action.payload: \", action.payload);\n      const newState = JSON.parse(JSON.stringify(state));\n      console.log(\"Item IDs in state: \", newState.map(item => item.id));\n      console.log(\"Item ID type: \", typeof newState[0].id);\n      console.log(\"action.payload type: \", typeof action.payload);\n\n      // Filter out the item to be removed\n      const filteredState = newState.filter(item => item.id !== action.payload.id);\n\n      // Update local storage\n      localStorage.setItem(\"cartItems\", JSON.stringify(filteredState));\n      state = filteredState;\n      // Return the new state\n      return filteredState;\n    }\n  }\n});\nexport const {\n  add,\n  remove\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","reducers","add","state","action","localStorage","setItem","JSON","stringify","payload","remove","console","log","newState","parse","map","item","id","filteredState","filter","actions","reducer"],"sources":["/home/zt62/Desktop/Harshil_Dave/MERN_PRACTICE_projects/GoFood/food-delevery-app/src/store/CartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n\n  initialState: [],\n\n  reducers: {\n    add(state, action) {\n      localStorage.setItem(\n        \"cartItems\",\n        JSON.stringify([...state, action.payload])\n      );\n      return [...state, action.payload];\n    },\n\n    remove(state, action) {\n      console.log(\"action.payload: \", action.payload);\n\n      const newState = JSON.parse(JSON.stringify(state));\n\n      console.log(\n        \"Item IDs in state: \",\n        newState.map((item) => item.id)\n      );\n\n      console.log(\"Item ID type: \", typeof newState[0].id);\n      console.log(\"action.payload type: \", typeof action.payload);\n\n      // Filter out the item to be removed\n      const filteredState = newState.filter(\n        (item) => item.id !== action.payload.id\n      );\n\n      // Update local storage\n      localStorage.setItem(\"cartItems\", JSON.stringify(filteredState));\n\n      state = filteredState;\n      // Return the new state\n      return filteredState;\n    },\n  },\n});\n\nexport const { add, remove } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EAEZC,YAAY,EAAE,EAAE;EAEhBC,QAAQ,EAAE;IACRC,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACjBC,YAAY,CAACC,OAAO,CAClB,WAAW,EACXC,IAAI,CAACC,SAAS,CAAC,CAAC,GAAGL,KAAK,EAAEC,MAAM,CAACK,OAAO,CAAC,CAC3C,CAAC;MACD,OAAO,CAAC,GAAGN,KAAK,EAAEC,MAAM,CAACK,OAAO,CAAC;IACnC,CAAC;IAEDC,MAAMA,CAACP,KAAK,EAAEC,MAAM,EAAE;MACpBO,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAER,MAAM,CAACK,OAAO,CAAC;MAE/C,MAAMI,QAAQ,GAAGN,IAAI,CAACO,KAAK,CAACP,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC,CAAC;MAElDQ,OAAO,CAACC,GAAG,CACT,qBAAqB,EACrBC,QAAQ,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAChC,CAAC;MAEDN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,OAAOC,QAAQ,CAAC,CAAC,CAAC,CAACI,EAAE,CAAC;MACpDN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,OAAOR,MAAM,CAACK,OAAO,CAAC;;MAE3D;MACA,MAAMS,aAAa,GAAGL,QAAQ,CAACM,MAAM,CAClCH,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKb,MAAM,CAACK,OAAO,CAACQ,EACvC,CAAC;;MAED;MACAZ,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACU,aAAa,CAAC,CAAC;MAEhEf,KAAK,GAAGe,aAAa;MACrB;MACA,OAAOA,aAAa;IACtB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEhB,GAAG;EAAEQ;AAAO,CAAC,GAAGZ,SAAS,CAACsB,OAAO;AAEhD,eAAetB,SAAS,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}